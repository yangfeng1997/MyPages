{"version":3,"file":"SearchResult.js","sources":["../../../src/client/composables/useQueryHistory.ts","../../../src/client/utils/getResultPath.ts","../../../src/client/composables/useResultHistory.ts","../../../src/client/composables/useResults.ts","../../../src/client/components/SearchResult.ts"],"sourcesContent":["import { useLocalStorage } from '@vueuse/core'\nimport type { Ref } from 'vue'\n\nimport { options } from '../define.js'\n\nconst SLIMSEARCH_HISTORY_QUERY_STORAGE = 'SLIMSEARCH_QUERY_HISTORY'\n\nexport interface QueryHistory {\n  enabled: boolean\n  queryHistories: Ref<string[]>\n  addQueryHistory: (item: string) => void\n  removeQueryHistory: (index: number) => void\n}\n\nconst searchProQueryStorage = useLocalStorage<string[]>(\n  SLIMSEARCH_HISTORY_QUERY_STORAGE,\n  [],\n)\n\nexport const useQueryHistory = (): QueryHistory => {\n  const { queryHistoryCount } = options\n  const enabled = queryHistoryCount > 0\n\n  const addQueryHistory = (item: string): void => {\n    if (enabled)\n      searchProQueryStorage.value = Array.from(\n        new Set([\n          item,\n          ...searchProQueryStorage.value.slice(0, queryHistoryCount - 1),\n        ]),\n      )\n  }\n\n  const removeQueryHistory = (index: number): void => {\n    searchProQueryStorage.value = [\n      ...searchProQueryStorage.value.slice(0, index),\n      ...searchProQueryStorage.value.slice(index + 1),\n    ]\n  }\n\n  return {\n    enabled,\n    queryHistories: searchProQueryStorage,\n    addQueryHistory,\n    removeQueryHistory,\n  }\n}\n","import { store } from '@temp/slimsearch/store.js'\n\nimport type { MatchedItem } from '../typings/index.js'\n\nexport const getResultPath = (item: MatchedItem): string =>\n  store[item.id] + ('anchor' in item ? `#${item.anchor}` : '')\n","import { useLocalStorage } from '@vueuse/core'\nimport type { Ref } from 'vue'\n\nimport { options } from '../define.js'\nimport type { MatchedItem, Word } from '../typings/index.js'\nimport { getResultPath } from '../utils/index.js'\n\nconst SLIMSEARCH_RESULT_HISTORY_STORAGE = 'SLIMSEARCH_RESULT_HISTORY'\n\nexport interface ResultHistoryItem {\n  header?: string\n  link: string\n  display: Word[][]\n}\n\nexport interface ResultHistory {\n  enabled: boolean\n  resultHistories: Ref<ResultHistoryItem[]>\n  addResultHistory: (item: MatchedItem) => void\n  removeResultHistory: (index: number) => void\n}\n\nconst { resultHistoryCount } = options\n\nconst searchProResultStorage = useLocalStorage<ResultHistoryItem[]>(\n  SLIMSEARCH_RESULT_HISTORY_STORAGE,\n  [],\n)\n\nexport const useResultHistory = (): ResultHistory => {\n  const enabled = resultHistoryCount > 0\n\n  const addResultHistory = (item: MatchedItem): void => {\n    if (enabled) {\n      const resultHistory: ResultHistoryItem = {\n        link: getResultPath(item),\n        display: item.display,\n      }\n\n      if ('header' in item) resultHistory.header = item.header\n\n      searchProResultStorage.value = [\n        resultHistory,\n        ...searchProResultStorage.value.slice(0, resultHistoryCount - 1),\n      ]\n    }\n  }\n\n  const removeResultHistory = (index: number): void => {\n    searchProResultStorage.value = [\n      ...searchProResultStorage.value.slice(0, index),\n      ...searchProResultStorage.value.slice(index + 1),\n    ]\n  }\n\n  return {\n    enabled,\n    resultHistories: searchProResultStorage,\n    addResultHistory,\n    removeResultHistory,\n  }\n}\n","import { useDebounceFn, watchImmediate } from '@vueuse/core'\nimport type { Ref } from 'vue'\nimport { computed, onMounted, onUnmounted, ref, shallowRef } from 'vue'\nimport { usePageData, useRouteLocale } from 'vuepress/client'\n\nimport { options } from '../define.js'\nimport { useSearchOptions } from '../helpers/index.js'\nimport type { SearchResult } from '../typings/index.js'\nimport { createSearchWorker } from '../utils/index.js'\n\nexport interface Results {\n  results: Ref<SearchResult[]>\n  isSearching: Ref<boolean>\n}\n\nexport const useResults = (queries: Ref<string[]>): Results => {\n  const searchOptions = useSearchOptions()\n  const routeLocale = useRouteLocale()\n  const pageData = usePageData()\n\n  const searchingProcessNumber = ref(0)\n  const isSearching = computed(() => searchingProcessNumber.value > 0)\n  const results = shallowRef<SearchResult[]>([])\n\n  onMounted(() => {\n    const { search, terminate } = createSearchWorker()\n\n    const performSearch = useDebounceFn(\n      (query: string): void => {\n        const {\n          resultsFilter = (items): SearchResult[] => items,\n          querySplitter,\n          suggestionsFilter,\n          ...rest\n        } = searchOptions.value\n\n        if (query) {\n          searchingProcessNumber.value += 1\n\n          search(query, routeLocale.value, rest)\n            .then((items) =>\n              resultsFilter(items, query, routeLocale.value, pageData.value),\n            )\n            .then((items) => {\n              searchingProcessNumber.value -= 1\n              results.value = items\n            })\n            .catch((err: unknown) => {\n              // eslint-disable-next-line no-console\n              console.warn(err)\n              searchingProcessNumber.value -= 1\n              if (!searchingProcessNumber.value) results.value = []\n            })\n        } else {\n          results.value = []\n        }\n      },\n      options.searchDelay - options.suggestDelay,\n      { maxWait: 5000 },\n    )\n\n    watchImmediate([queries, routeLocale], ([newQueries]) =>\n      performSearch(newQueries.join(' ')),\n    )\n\n    onUnmounted(() => {\n      terminate()\n    })\n  })\n\n  return {\n    isSearching,\n    results,\n  }\n}\n","import {\n  isPlainObject,\n  isString,\n  useLocaleConfig,\n} from '@vuepress/helper/client'\nimport { useEventListener } from '@vueuse/core'\nimport type { PropType, VNode } from 'vue'\nimport { computed, defineComponent, h, reactive, ref, toRef, watch } from 'vue'\nimport { RouteLink, useRouteLocale, useRouter } from 'vuepress/client'\n\nimport {\n  useQueryHistory,\n  useResultHistory,\n  useResults,\n} from '../composables/index.js'\nimport { customFieldConfig, locales } from '../define.js'\nimport { CLOSE_ICON } from '../icons/index.js'\nimport type { MatchedItem, Word } from '../typings/index.js'\nimport { getResultPath } from '../utils/index.js'\nimport { SearchLoading } from './SearchLoading.js'\nimport { HeadingIcon, HeartIcon, HistoryIcon, TitleIcon } from './icons.js'\n\nimport '../styles/search-result.css'\n\nexport default defineComponent({\n  name: 'SearchResult',\n\n  props: {\n    /**\n     * Query string\n     *\n     * 查询字符串\n     */\n    queries: {\n      type: Array as PropType<string[]>,\n      required: true,\n    },\n\n    /**\n     * Whether is focusing\n     *\n     * 是否被聚焦\n     */\n    isFocusing: Boolean,\n  },\n\n  emits: ['close', 'updateQuery'],\n\n  setup(props, { emit }) {\n    const router = useRouter()\n    const routeLocale = useRouteLocale()\n    const locale = useLocaleConfig(locales)\n    const {\n      enabled: enableQueryHistory,\n      addQueryHistory,\n      queryHistories,\n      removeQueryHistory,\n    } = useQueryHistory()\n    const {\n      enabled: enableResultHistory,\n      resultHistories,\n      addResultHistory,\n      removeResultHistory,\n    } = useResultHistory()\n    const enableHistory = enableQueryHistory || enableResultHistory\n\n    const queries = toRef(props, 'queries')\n    const { results, isSearching } = useResults(queries)\n\n    const activatedHistoryStatus = reactive({ isQuery: true, index: 0 })\n    const activatedResultIndex = ref(0)\n    const activatedResultContentIndex = ref(0)\n\n    const hasHistory = computed(\n      () =>\n        enableHistory &&\n        (queryHistories.value.length > 0 || resultHistories.value.length > 0),\n    )\n    const hasResults = computed(() => results.value.length > 0)\n    const activatedResult = computed(\n      () => results.value[activatedResultIndex.value] || null,\n    )\n\n    const activePreviousHistory = (): void => {\n      const { isQuery, index } = activatedHistoryStatus\n\n      if (index === 0) {\n        activatedHistoryStatus.isQuery = !isQuery\n        activatedHistoryStatus.index = isQuery\n          ? resultHistories.value.length - 1\n          : queryHistories.value.length - 1\n      } else {\n        activatedHistoryStatus.index = index - 1\n      }\n    }\n\n    const activeNextHistory = (): void => {\n      const { isQuery, index } = activatedHistoryStatus\n\n      if (\n        index ===\n        (isQuery\n          ? queryHistories.value.length - 1\n          : resultHistories.value.length - 1)\n      ) {\n        activatedHistoryStatus.isQuery = !isQuery\n        activatedHistoryStatus.index = 0\n      } else {\n        activatedHistoryStatus.index = index + 1\n      }\n    }\n\n    const activePreviousResult = (): void => {\n      activatedResultIndex.value =\n        activatedResultIndex.value > 0\n          ? activatedResultIndex.value - 1\n          : results.value.length - 1\n      activatedResultContentIndex.value =\n        activatedResult.value.contents.length - 1\n    }\n\n    const activeNextResult = (): void => {\n      activatedResultIndex.value =\n        activatedResultIndex.value < results.value.length - 1\n          ? activatedResultIndex.value + 1\n          : 0\n      activatedResultContentIndex.value = 0\n    }\n\n    const activeNextResultContent = (): void => {\n      if (\n        activatedResultContentIndex.value <\n        activatedResult.value.contents.length - 1\n      )\n        activatedResultContentIndex.value += 1\n      else activeNextResult()\n    }\n\n    const activePreviousResultContent = (): void => {\n      if (activatedResultContentIndex.value > 0)\n        activatedResultContentIndex.value -= 1\n      else activePreviousResult()\n    }\n\n    const getVNodes = (display: Word[]): (VNode | string)[] =>\n      display.map((word) => (isString(word) ? word : h(word[0], word[1])))\n\n    const getDisplay = (matchedItem: MatchedItem): (VNode | string)[] => {\n      if (matchedItem.type === 'customField') {\n        const formatterConfig =\n          customFieldConfig[matchedItem.index] || '$content'\n\n        const [prefix, suffix = ''] = isPlainObject(formatterConfig)\n          ? formatterConfig[routeLocale.value].split('$content')\n          : formatterConfig.split('$content')\n\n        return matchedItem.display.map((display) =>\n          h('div', getVNodes([prefix, ...display, suffix])),\n        )\n      }\n\n      return matchedItem.display.map((display) => h('div', getVNodes(display)))\n    }\n\n    const resetSearchResult = (): void => {\n      activatedResultIndex.value = 0\n      activatedResultContentIndex.value = 0\n      emit('updateQuery', '')\n      emit('close')\n    }\n\n    const renderSearchQueryHistory = (): VNode | null =>\n      enableQueryHistory\n        ? h(\n            'div',\n            { class: 'slimsearch-records' },\n            h('div', { class: 'slimsearch-record' }, [\n              h(\n                'div',\n                { class: 'slimsearch-record-title' },\n                locale.value.queryHistory,\n              ),\n              h(\n                'ul',\n                { class: 'slimsearch-record-contents', role: 'listbox' },\n                queryHistories.value.map((item, historyIndex) => {\n                  const active =\n                    activatedHistoryStatus.isQuery &&\n                    activatedHistoryStatus.index === historyIndex\n\n                  return h(\n                    'li',\n                    {\n                      'class': ['slimsearch-record-matches', { active }],\n                      'role': 'option',\n                      'aria-selected': active,\n                      'onClick': () => {\n                        emit('updateQuery', item)\n                      },\n                    },\n                    h('div', [\n                      h(HistoryIcon, {\n                        class: 'slimsearch-record-type',\n                      }),\n                      h('div', { class: 'slimsearch-record-content' }, item),\n                      h('button', {\n                        'type': 'button',\n                        'class': 'slimsearch-remove-icon',\n                        'title': locale.value.remove,\n                        'aria-label': locale.value.remove,\n                        'innerHTML': CLOSE_ICON,\n                        'onClick': (event: Event) => {\n                          event.preventDefault()\n                          event.stopPropagation()\n                          removeQueryHistory(historyIndex)\n                        },\n                      }),\n                    ]),\n                  )\n                }),\n              ),\n            ]),\n          )\n        : null\n\n    const renderSearchResultHistory = (): VNode | null =>\n      enableResultHistory\n        ? h(\n            'ul',\n            { class: 'slimsearch-records' },\n            h('li', { class: 'slimsearch-record' }, [\n              h(\n                'div',\n                { class: 'slimsearch-record-title' },\n                locale.value.resultHistory,\n              ),\n              h(\n                'ul',\n                { class: 'slimsearch-record-contents', role: 'listbox' },\n                resultHistories.value.map((item, historyIndex) => {\n                  const active =\n                    !activatedHistoryStatus.isQuery &&\n                    activatedHistoryStatus.index === historyIndex\n\n                  return h(\n                    'li',\n                    {\n                      'class': ['slimsearch-record-matches', { active }],\n                      'role': 'option',\n                      'aria-selected': active,\n                    },\n                    h(\n                      RouteLink,\n                      {\n                        to: item.link,\n                        onClick: () => {\n                          resetSearchResult()\n                        },\n                      },\n                      () => [\n                        h(HistoryIcon, {\n                          class: 'slimsearch-record-type',\n                        }),\n                        h('div', { class: 'slimsearch-record-content' }, [\n                          item.header\n                            ? h(\n                                'div',\n                                { class: 'slimsearch-record-content-header' },\n                                item.header,\n                              )\n                            : null,\n                          h(\n                            'div',\n                            item.display\n                              .map((display) => getVNodes(display))\n                              .flat(),\n                          ),\n                        ]),\n                        h('button', {\n                          'type': 'button',\n                          'class': 'slimsearch-remove-icon',\n                          'title': locale.value.remove,\n                          'aria-label': locale.value.remove,\n                          'innerHTML': CLOSE_ICON,\n                          'onClick': (event: Event) => {\n                            event.preventDefault()\n                            event.stopPropagation()\n                            removeResultHistory(historyIndex)\n                          },\n                        }),\n                      ],\n                    ),\n                  )\n                }),\n              ),\n            ]),\n          )\n        : null\n\n    useEventListener('keydown', (event: KeyboardEvent) => {\n      if (!props.isFocusing) return\n\n      if (hasResults.value) {\n        if (event.key === 'ArrowUp') {\n          activePreviousResultContent()\n        } else if (event.key === 'ArrowDown') {\n          activeNextResultContent()\n        } else if (event.key === 'Enter') {\n          const item =\n            activatedResult.value.contents[activatedResultContentIndex.value]\n\n          addQueryHistory(props.queries.join(' '))\n          addResultHistory(item)\n          void router.push(getResultPath(item))\n          resetSearchResult()\n        }\n      } else if (enableResultHistory) {\n        if (event.key === 'ArrowUp') {\n          activePreviousHistory()\n        } else if (event.key === 'ArrowDown') {\n          activeNextHistory()\n        } else if (event.key === 'Enter') {\n          const { index } = activatedHistoryStatus\n\n          if (activatedHistoryStatus.isQuery) {\n            event.preventDefault()\n            emit('updateQuery', queryHistories.value[index])\n          } else {\n            void router.push(resultHistories.value[index].link)\n            resetSearchResult()\n          }\n        }\n      }\n    })\n\n    watch(\n      [activatedResultIndex, activatedResultContentIndex],\n      () => {\n        document\n          .querySelector(\n            '.slimsearch-record.active .slimsearch-record-matches.active',\n          )\n          ?.scrollIntoView(false)\n      },\n      { flush: 'post' },\n    )\n\n    return (): VNode =>\n      h(\n        'div',\n        {\n          id: 'slimsearch-results',\n          class: [\n            'slimsearch-result-wrapper',\n            {\n              empty: props.queries.length\n                ? !hasResults.value\n                : !hasHistory.value,\n            },\n          ],\n        },\n        props.queries.length\n          ? isSearching.value\n            ? h(SearchLoading, { hint: locale.value.searching })\n            : hasResults.value\n              ? h(\n                  'div',\n                  {\n                    'class': 'slimsearch-records',\n                    'role': 'listbox',\n                    'aria-labeledby': 'slimsearch-label',\n                  },\n                  results.value.map(({ title, contents }, index) => {\n                    const isCurrentResultActive =\n                      activatedResultIndex.value === index\n\n                    return h(\n                      'div',\n                      {\n                        'class': [\n                          'slimsearch-record',\n                          { active: isCurrentResultActive },\n                        ],\n                        'role': 'group',\n                        'aria-selected': isCurrentResultActive,\n                      },\n                      [\n                        h(\n                          'div',\n                          { class: 'slimsearch-record-title' },\n                          title || locale.value.defaultTitle,\n                        ),\n                        h(\n                          'ul',\n                          { class: 'slimsearch-record-contents' },\n                          contents.map((item, contentIndex) => {\n                            const isCurrentContentActive =\n                              isCurrentResultActive &&\n                              activatedResultContentIndex.value === contentIndex\n\n                            return h(\n                              'li',\n                              {\n                                'class': [\n                                  'slimsearch-record-matches',\n                                  { active: isCurrentContentActive },\n                                ],\n                                'role': 'option',\n                                'aria-selected': isCurrentContentActive,\n                              },\n                              h(\n                                RouteLink,\n                                {\n                                  to: getResultPath(item),\n                                  onClick: () => {\n                                    addQueryHistory(props.queries.join(' '))\n                                    addResultHistory(item)\n                                    resetSearchResult()\n                                  },\n                                },\n                                () => [\n                                  item.type === 'text'\n                                    ? null\n                                    : h(\n                                        item.type === 'title'\n                                          ? TitleIcon\n                                          : item.type === 'heading'\n                                            ? HeadingIcon\n                                            : HeartIcon,\n                                        { class: 'slimsearch-record-type' },\n                                      ),\n                                  h(\n                                    'div',\n                                    { class: 'slimsearch-record-content' },\n                                    [\n                                      item.type === 'text' && item.header\n                                        ? h(\n                                            'div',\n                                            {\n                                              class:\n                                                'slimsearch-record-content-header',\n                                            },\n                                            item.header,\n                                          )\n                                        : null,\n                                      h('div', getDisplay(item)),\n                                    ],\n                                  ),\n                                ],\n                              ),\n                            )\n                          }),\n                        ),\n                      ],\n                    )\n                  }),\n                )\n              : locale.value.emptyResult\n          : enableHistory\n            ? hasHistory.value\n              ? [renderSearchQueryHistory(), renderSearchResultHistory()]\n              : locale.value.emptyHistory\n            : locale.value.emptyResult,\n      )\n  },\n})\n"],"names":["SLIMSEARCH_HISTORY_QUERY_STORAGE","searchProQueryStorage","useLocalStorage","useQueryHistory","queryHistoryCount","options","enabled","item","index","getResultPath","store","SLIMSEARCH_RESULT_HISTORY_STORAGE","resultHistoryCount","searchProResultStorage","useResultHistory","resultHistory","useResults","queries","searchOptions","useSearchOptions","routeLocale","useRouteLocale","pageData","usePageData","searchingProcessNumber","ref","isSearching","computed","results","shallowRef","onMounted","search","terminate","createSearchWorker","performSearch","useDebounceFn","query","resultsFilter","items","querySplitter","suggestionsFilter","rest","err","watchImmediate","newQueries","onUnmounted","defineComponent","props","emit","router","useRouter","locale","useLocaleConfig","locales","enableQueryHistory","addQueryHistory","queryHistories","removeQueryHistory","enableResultHistory","resultHistories","addResultHistory","removeResultHistory","enableHistory","toRef","activatedHistoryStatus","reactive","activatedResultIndex","activatedResultContentIndex","hasHistory","hasResults","activatedResult","activePreviousHistory","isQuery","activeNextHistory","activePreviousResult","activeNextResult","activeNextResultContent","activePreviousResultContent","getVNodes","display","word","isString","h","getDisplay","matchedItem","formatterConfig","customFieldConfig","prefix","suffix","isPlainObject","resetSearchResult","renderSearchQueryHistory","historyIndex","active","HistoryIcon","CLOSE_ICON","event","renderSearchResultHistory","RouteLink","useEventListener","watch","SearchLoading","title","contents","isCurrentResultActive","contentIndex","isCurrentContentActive","TitleIcon","HeadingIcon","HeartIcon"],"mappings":"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"}