{"version":3,"file":"index.js","sources":["../../../src/client/worker/matchContent.ts","../../../src/client/worker/result.ts","../../../src/client/worker/suggestion.ts","../../../src/client/worker/index.ts"],"sourcesContent":["import type { Word } from '../typings/index.js'\n\nconst MAX_LENGTH = 100\nconst SUFFIX_LENGTH = 20\n\nexport const getMatchedContent = (\n  content: string,\n  queryString: string,\n): Word[] | null => {\n  const contentLowerCase = content.toLowerCase()\n  const queryStringLowerCase = queryString.toLowerCase()\n  const result: Word[] = []\n\n  let startIndex = 0\n  let contentLength = 0\n\n  const addResult = (text: string, isEnd = false): void => {\n    let display: string\n\n    // A beginning of a long string\n    if (contentLength === 0)\n      display =\n        text.length > SUFFIX_LENGTH ? `… ${text.slice(-SUFFIX_LENGTH)}` : text\n    // Already the last text\n    else if (isEnd)\n      display =\n        // If the string will be longer than maxLength\n        text.length + contentLength > MAX_LENGTH\n          ? `${text.slice(0, MAX_LENGTH - contentLength)}… `\n          : text\n    // Text is at the middle\n    else\n      display =\n        text.length > SUFFIX_LENGTH\n          ? `${text.slice(0, SUFFIX_LENGTH)} … ${text.slice(-SUFFIX_LENGTH)}`\n          : text\n\n    if (display) result.push(display)\n    contentLength += display.length\n\n    if (!isEnd) {\n      result.push(['mark', queryString])\n      contentLength += queryString.length\n\n      if (contentLength >= MAX_LENGTH) result.push(' …')\n    }\n  }\n\n  let matchIndex = contentLowerCase.indexOf(queryStringLowerCase, startIndex)\n\n  if (matchIndex === -1) return null\n\n  while (matchIndex >= 0) {\n    const endIndex = matchIndex + queryStringLowerCase.length\n\n    // Append content before\n    addResult(content.slice(startIndex, matchIndex))\n\n    startIndex = endIndex\n\n    if (contentLength > MAX_LENGTH) break\n\n    matchIndex = contentLowerCase.indexOf(queryStringLowerCase, startIndex)\n  }\n\n  if (contentLength < MAX_LENGTH) addResult(content.slice(startIndex), true)\n\n  return result\n}\n","import { entries } from '@vuepress/helper/shared'\nimport type { MatchInfo, SearchIndex } from 'slimsearch'\nimport { getStoredFields, search } from 'slimsearch'\n\nimport type {\n  CustomFieldIndexItem,\n  IndexItem,\n  PageIndexItem,\n} from '../../shared/index.js'\nimport type {\n  HeadingMatchedItem,\n  MatchedItem,\n  SearchResult,\n  TitleMatchedItem,\n  Word,\n  WorkerSearchOptions,\n} from '../typings/index.js'\nimport { getMatchedContent } from './matchContent.js'\n\ndeclare const __SLIMSEARCH_SORT_STRATEGY__: 'max' | 'total'\n\nexport type MiniSearchResult = IndexItem & {\n  terms: string[]\n  score: number\n  match: MatchInfo\n}\n\ninterface PageResult {\n  title: string\n  contents: [result: MatchedItem, score: number][]\n}\n\ntype ResultMap = Record<string, PageResult>\n\nconst sortWithTotal = (valueA: PageResult, valueB: PageResult): number =>\n  valueB.contents.reduce((total, [, score]) => total + score, 0) -\n  valueA.contents.reduce((total, [, score]) => total + score, 0)\n\nconst sortWithMax = (valueA: PageResult, valueB: PageResult): number =>\n  Math.max(...valueB.contents.map(([, score]) => score)) -\n  Math.max(...valueA.contents.map(([, score]) => score))\n\nexport const getResults = (\n  query: string,\n  localeIndex: SearchIndex<string, IndexItem, IndexItem>,\n  searchOptions: WorkerSearchOptions = {},\n): SearchResult[] => {\n  const resultMap: ResultMap = {}\n\n  const results = search(localeIndex, query, {\n    boost: {\n      // eslint-disable-next-line no-useless-computed-key\n      [/** Heading */ 'h']: 2,\n      // eslint-disable-next-line no-useless-computed-key\n      [/** Text */ 't']: 1,\n      // eslint-disable-next-line no-useless-computed-key\n      [/** CustomFields */ 'c']: 4,\n    },\n    prefix: true,\n    ...searchOptions,\n  })\n\n  results.forEach((result) => {\n    const { id, terms, score } = result\n    const isCustomField = id.includes('@')\n    const isSection = id.includes('#')\n    const [pageIndex, info] = id.split(/[#@]/)\n    const pageId = Number(pageIndex)\n\n    const displayTerms = terms\n      .sort((a, b) => a.length - b.length)\n      .filter((item, index) =>\n        terms.slice(index + 1).every((term) => !term.includes(item)),\n      )\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, no-multi-assign\n    const { contents } = (resultMap[pageId] ??= {\n      title: '',\n      contents: [],\n    })\n\n    // CustomFieldIndexItem\n    if (isCustomField) {\n      contents.push([\n        {\n          type: 'customField',\n          id: pageId,\n          index: info,\n          display: displayTerms\n            .map((term) =>\n              (result as CustomFieldIndexItem).c.map((field) =>\n                getMatchedContent(field, term),\n              ),\n            )\n            .flat()\n            .filter((item): item is Word[] => item !== null),\n        },\n        score,\n      ])\n    } else {\n      const headerContent = displayTerms\n        .map((term) => getMatchedContent((result as PageIndexItem).h, term))\n        .filter((item): item is Word[] => item !== null)\n\n      if (headerContent.length)\n        contents.push([\n          {\n            type: isSection ? 'heading' : 'title',\n            id: pageId,\n            ...(isSection && { anchor: info }),\n            display: headerContent,\n          } as HeadingMatchedItem | TitleMatchedItem,\n          score,\n        ])\n\n      if (/** Text */ 't' in result && result.t)\n        for (const text of result.t) {\n          const matchedContent = displayTerms\n            .map((term) => getMatchedContent(text, term))\n            .filter((item): item is Word[] => item !== null)\n\n          if (matchedContent.length)\n            contents.push([\n              {\n                type: 'text',\n                id: pageId,\n                ...(isSection && { anchor: info }),\n                display: matchedContent,\n              },\n              score,\n            ])\n        }\n    }\n  })\n\n  return entries(resultMap)\n    .sort(([, valueA], [, valueB]) =>\n      __SLIMSEARCH_SORT_STRATEGY__ === 'total'\n        ? sortWithTotal(valueA, valueB)\n        : sortWithMax(valueA, valueB),\n    )\n    .map(([id, { title, contents }]) => {\n      // Search to get title\n      if (!title) {\n        const pageIndex = getStoredFields(localeIndex, id) as unknown as\n          | PageIndexItem\n          | undefined\n\n        // eslint-disable-next-line no-param-reassign\n        if (pageIndex) title = pageIndex.h\n      }\n\n      return {\n        title,\n        contents: contents.map(([result]) => result),\n      }\n    })\n}\n","import type { SearchIndex } from 'slimsearch'\nimport { autoSuggest } from 'slimsearch'\n\nimport type { IndexItem } from '../../shared/index.js'\nimport type { WorkerSearchOptions } from '../typings/index.js'\n\nexport const getSuggestions = (\n  query: string,\n  localeIndex: SearchIndex<string, IndexItem, IndexItem>,\n  searchOptions: WorkerSearchOptions = {},\n): string[] => {\n  const suggestions = autoSuggest(localeIndex, query, {\n    fuzzy: 0.2,\n    maxFuzzy: 3,\n    ...searchOptions,\n  }).map(({ suggestion }) => suggestion)\n\n  // filter multi-word suggestions if query is not multi-word\n  return query.includes(' ')\n    ? suggestions\n    : suggestions.filter((suggestion) => !suggestion.includes(' '))\n}\n","/* eslint-disable no-restricted-globals */\nimport database from '@temp/slimsearch/index.js'\nimport { loadJSONIndex } from 'slimsearch'\n\nimport type { IndexItem } from '../../shared/index.js'\nimport type { MessageData } from '../typings/index.js'\nimport { getResults } from './result.js'\nimport { getSuggestions } from './suggestion.js'\n\nself.onmessage = async ({\n  data: { type = 'all', query, locale = '/', options, id },\n}: MessageEvent<MessageData>): Promise<void> => {\n  const { default: localeIndex } = await database[locale]()\n\n  const searchLocaleIndex = loadJSONIndex<string, IndexItem, IndexItem>(\n    localeIndex,\n    {\n      fields: [/** Heading */ 'h', /** Text */ 't', /** CustomFields */ 'c'],\n      storeFields: [\n        /** Heading */ 'h',\n        /** Text */ 't',\n        /** CustomFields */ 'c',\n      ],\n    },\n  )\n\n  if (type === 'suggest')\n    self.postMessage([\n      type,\n      id,\n      getSuggestions(query, searchLocaleIndex, options),\n    ])\n  else if (type === 'search')\n    self.postMessage([type, id, getResults(query, searchLocaleIndex, options)])\n  else\n    self.postMessage({\n      suggestions: [\n        type,\n        id,\n        getSuggestions(query, searchLocaleIndex, options),\n      ],\n      results: [type, id, getResults(query, searchLocaleIndex, options)],\n    })\n}\n"],"names":["getMatchedContent","content","queryString","contentLowerCase","queryStringLowerCase","result","startIndex","contentLength","addResult","text","isEnd","display","matchIndex","endIndex","sortWithTotal","valueA","valueB","total","score","sortWithMax","getResults","query","localeIndex","searchOptions","resultMap","search","id","terms","isCustomField","isSection","pageIndex","info","pageId","displayTerms","a","b","item","index","term","contents","field","headerContent","matchedContent","entries","title","getStoredFields","getSuggestions","suggestions","autoSuggest","suggestion","type","locale","options","database","searchLocaleIndex","loadJSONIndex"],"mappings":"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"}