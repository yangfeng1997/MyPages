{"version":3,"file":"index.js","sources":["../../src/node/utils/encodeXML.ts","../../src/node/utils/getAuthor.ts","../../src/node/utils/getCategory.ts","../../src/node/utils/getMineType.ts","../../src/node/utils/getUrl.ts","../../src/node/utils/logger.ts","../../src/node/getFeedFilenames.ts","../../src/node/addFeedLinks.ts","../../src/node/feed/item.ts","../../src/node/getFeedChannelOptions.ts","../../src/node/getFeedLinks.ts","../../src/node/feed/store.ts","../../src/node/generator/atom/index.ts","../../src/node/generator/json/index.ts","../../src/node/generator/rss/index.ts","../../src/node/getFeedFiles.ts","../../src/node/getFeedOptions.ts","../../src/node/getTemplates.ts","../../src/node/output.ts","../../src/node/feedPlugin.ts"],"sourcesContent":["import { entries, fromEntries, isArray, isPlainObject } from '@vuepress/helper'\nimport type { ElementCompact } from 'xml-js'\n\n/**\n * @see https://stackoverflow.com/questions/223652/is-there-a-way-to-escape-a-cdata-end-token-in-xml\n */\nexport const encodeCDATA = (content: string): string =>\n  content.replace(/]]>/g, ']]]]><![CDATA[>')\n\nexport const encodeXMLContent = (content: string): string =>\n  content\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n\nexport const encodeXML = (content: ElementCompact): ElementCompact =>\n  fromEntries(\n    entries(content).map(([key, value]) => {\n      if (key === '_attributes' && value)\n        return [\n          key,\n          fromEntries(\n            entries(value as Record<string, number | string | undefined>).map(\n              ([attr, attrValue]) => [\n                attr,\n                attrValue ? encodeXMLContent(attrValue.toString()) : undefined,\n              ],\n            ),\n          ),\n        ]\n\n      if (key === '_text')\n        return [key, encodeXMLContent((value as number | string).toString())]\n      if (key === '_cdata') return [key, encodeCDATA(value as string)]\n      if (key === '_comment' || key === '_instruction') return [key, value]\n\n      if (isArray(value))\n        return [key, value.map((item) => encodeXML(item as ElementCompact))]\n\n      if (isPlainObject(value)) return [key, encodeXML(value as ElementCompact)]\n\n      return [key, encodeXMLContent(String(value))]\n    }),\n  ) satisfies ElementCompact\n","import { isArray, isPlainObject, isString } from '@vuepress/helper'\nimport type { FeedAuthor, FrontmatterAuthor } from '../../typings/index.js'\n\nconst isFeedAuthor = (author: unknown): author is FeedAuthor =>\n  isPlainObject(author) && isString(author.name)\n\nexport const getFeedAuthor = (\n  author: FrontmatterAuthor | false | undefined,\n): FeedAuthor[] => {\n  if (author) {\n    if (isArray(author))\n      return author\n        .map((item) =>\n          isString(item) ? { name: item } : isFeedAuthor(item) ? item : null,\n        )\n        .filter((item): item is FeedAuthor => item !== null)\n\n    if (isString(author)) return [{ name: author }]\n\n    if (isFeedAuthor(author)) return [author]\n\n    // eslint-disable-next-line no-console\n    console.error(\n      `Expect \"author\" to be \\`AuthorInfo[] | AuthorInfo | string[] | string | undefined\\`, but got`,\n      author,\n    )\n\n    return []\n  }\n\n  return []\n}\n","import { isArray, isString } from '@vuepress/helper'\n\nexport const getFeedCategory = (\n  category: string[] | string | undefined,\n): string[] => {\n  if (category) {\n    if (isArray(category) && category.every(isString)) return category\n    if (isString(category)) return [category]\n  }\n\n  return []\n}\n","export const getImageMineType = (ext = ''): string =>\n  `image/${\n    ext === 'jpg'\n      ? 'jpeg'\n      : ext === 'svg'\n        ? 'svg+xml'\n        : ext === 'jpeg' ||\n            ext === 'png' ||\n            ext === 'bmp' ||\n            ext === 'gif' ||\n            ext === 'webp'\n          ? ext\n          : ''\n  }`\n","import {\n  isLinkHttp,\n  removeEndingSlash,\n  removeLeadingSlash,\n} from 'vuepress/shared'\n\nexport const getUrl = (hostname: string, base = '', path = ''): string =>\n  `${\n    isLinkHttp(hostname)\n      ? removeEndingSlash(hostname)\n      : `https://${removeEndingSlash(hostname)}`\n  }${base}${removeLeadingSlash(path)}`\n","import { Logger } from '@vuepress/helper'\n\nexport const FEED_GENERATOR = '@vuepress/plugin-feed'\n\nexport const logger = new Logger(FEED_GENERATOR)\n","import type { App } from 'vuepress/core'\nimport { removeLeadingSlash } from 'vuepress/shared'\nimport type { FeedPluginOptions } from '../typings/index.js'\nimport type { ResolvedFeedOptions } from './getFeedOptions.js'\nimport { getUrl } from './utils/index.js'\n\nexport const getFeedFilenames = (\n  options: ResolvedFeedOptions,\n  prefix = '/',\n): Required<\n  Pick<\n    FeedPluginOptions,\n    | 'atomOutputFilename'\n    | 'atomXslFilename'\n    | 'jsonOutputFilename'\n    | 'rssOutputFilename'\n    | 'rssXslFilename'\n  >\n> => ({\n  atomOutputFilename: `${removeLeadingSlash(prefix)}${\n    options.atomOutputFilename || 'atom.xml'\n  }`,\n  atomXslFilename: `${removeLeadingSlash(prefix)}${\n    options.atomXslFilename || 'atom.xsl'\n  }`,\n\n  jsonOutputFilename: `${removeLeadingSlash(prefix)}${\n    options.jsonOutputFilename || 'feed.json'\n  }`,\n  rssOutputFilename: `${removeLeadingSlash(prefix)}${\n    options.rssOutputFilename || 'rss.xml'\n  }`,\n  rssXslFilename: `${removeLeadingSlash(prefix)}${\n    options.rssXslFilename || 'rss.xsl'\n  }`,\n})\n\nexport interface FeedLinks {\n  localePath: string\n  atom: string\n  atomXsl: string\n  json: string\n  rss: string\n  rssXsl: string\n}\n\nexport const getFeedLinks = (\n  app: App,\n  options: ResolvedFeedOptions,\n  localePath: string,\n): FeedLinks => {\n  const { base } = app.siteData\n  const { hostname } = options\n  const {\n    atomOutputFilename,\n    atomXslFilename,\n    jsonOutputFilename,\n    rssOutputFilename,\n    rssXslFilename,\n  } = getFeedFilenames(options, localePath)\n\n  return {\n    localePath,\n    atom: getUrl(hostname, base, atomOutputFilename),\n    atomXsl: getUrl(hostname, base, atomXslFilename),\n    json: getUrl(hostname, base, jsonOutputFilename),\n    rss: getUrl(hostname, base, rssOutputFilename),\n    rssXsl: getUrl(hostname, base, rssXslFilename),\n  }\n}\n","import { keys } from '@vuepress/helper'\nimport type { App } from 'vuepress/core'\nimport type { HeadConfig } from 'vuepress/shared'\nimport { getFeedFilenames } from './getFeedFilenames.js'\nimport type { ResolvedFeedOptionsMap } from './getFeedOptions.js'\nimport { getUrl } from './utils/index.js'\n\nexport const addFeedLinks = (\n  app: App,\n  options: ResolvedFeedOptionsMap,\n): void => {\n  const { base, title, locales, head } = app.siteData\n  const localePaths = keys(options)\n\n  // there is only one language, so we append it to siteData\n  if (localePaths.length === 1) {\n    const { atomOutputFilename, jsonOutputFilename, rssOutputFilename } =\n      getFeedFilenames(options['/'])\n    const { atom, json, rss, hostname } = options['/']\n\n    const getHeadItem = (\n      name: string,\n      fileName: string,\n      type: string,\n    ): HeadConfig => [\n      'link',\n      {\n        rel: 'alternate',\n        type,\n        href: getUrl(hostname, base, fileName),\n        title: `${\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n          title || locales['/']?.title || ''\n        } ${name} Feed`,\n      },\n    ]\n\n    // add atom link\n    if (atom)\n      head.push(getHeadItem('Atom', atomOutputFilename, 'application/atom+xml'))\n\n    // add json link\n    if (json)\n      head.push(getHeadItem('JSON', jsonOutputFilename, 'application/json'))\n\n    // add rss link\n    if (rss)\n      head.push(getHeadItem('RSS', rssOutputFilename, 'application/rss+xml'))\n  }\n  // there are multiple languages, so we should append to page\n  else {\n    app.pages.forEach((page) => {\n      const { pathLocale } = page\n      const localeOptions = options[pathLocale]\n\n      if (localePaths.includes(pathLocale)) {\n        const { atomOutputFilename, jsonOutputFilename, rssOutputFilename } =\n          getFeedFilenames(localeOptions, pathLocale)\n\n        const getHeadItem = (\n          name: string,\n          fileName: string,\n          type: string,\n        ): HeadConfig => [\n          'link',\n          {\n            rel: 'alternate',\n            type,\n            href: getUrl(localeOptions.hostname, base, fileName),\n            title: `${\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n              locales[pathLocale]?.title ||\n              title ||\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n              locales['/']?.title ||\n              ''\n            } ${name} Feed`,\n          },\n        ]\n\n        // ensure head exists\n        page.frontmatter.head ??= []\n\n        // add atom link\n        if (localeOptions.atom)\n          page.frontmatter.head.push(\n            getHeadItem('Atom', atomOutputFilename, 'application/atom+xml'),\n          )\n\n        // add json link\n        if (localeOptions.json)\n          page.frontmatter.head.push(\n            getHeadItem('JSON', jsonOutputFilename, 'application/json'),\n          )\n\n        // add rss link\n        if (localeOptions.rss)\n          page.frontmatter.head.push(\n            getHeadItem('RSS', rssOutputFilename, 'application/rss+xml'),\n          )\n      }\n    })\n  }\n}\n","import {\n  getPageExcerpt,\n  getPageText,\n  isArray,\n  isFunction,\n  isLinkAbsolute,\n  isLinkWithProtocol,\n  isPlainObject,\n} from '@vuepress/helper'\nimport type { App } from 'vuepress/core'\nimport type { PageFrontmatter } from 'vuepress/shared'\nimport { isString } from 'vuepress/shared'\nimport type {\n  AuthorInfo,\n  FeedAuthor,\n  FeedCategory,\n  FeedContributor,\n  FeedEnclosure,\n  FeedFrontmatterOption,\n  FeedGetter,\n  FeedPage,\n  FeedPluginFrontmatter,\n} from '../../typings/index.js'\nimport type { ResolvedFeedOptions } from '../getFeedOptions.js'\nimport {\n  getFeedAuthor,\n  getFeedCategory,\n  getImageMineType,\n  getUrl,\n} from '../utils/index.js'\n\nexport class FeedItem {\n  private readonly pageOptions: FeedFrontmatterOption\n  private readonly frontmatter: PageFrontmatter<FeedPluginFrontmatter>\n  private readonly base: string\n  private readonly getter: FeedGetter\n\n  public constructor(\n    private readonly app: App,\n    private readonly options: ResolvedFeedOptions,\n    private readonly page: FeedPage,\n    private readonly hostname: string,\n  ) {\n    this.base = this.app.siteData.base\n    this.frontmatter = page.frontmatter\n    this.getter = options.getter ?? {}\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    this.pageOptions = this.frontmatter.feed || {}\n  }\n\n  /**\n   * Feed item title\n   */\n  public get title(): string {\n    if (isFunction(this.getter.title))\n      return this.getter.title(this.page, this.app)\n\n    return this.pageOptions.title || this.page.title\n  }\n\n  /**\n   * The URL of the item.\n   */\n  public get link(): string {\n    if (isFunction(this.getter.link))\n      return this.getter.link(this.page, this.app)\n\n    return getUrl(this.hostname, this.base, this.page.path)\n  }\n\n  /**\n   * Feed item description.\n   */\n  public get description(): string | null {\n    if (isFunction(this.getter.description))\n      return this.getter.description(this.page, this.app)\n\n    if (this.pageOptions.description) return this.pageOptions.description\n\n    if (this.frontmatter.description) return this.frontmatter.description\n\n    const pageText = getPageText(this.app, this.page, { length: 180 })\n\n    return pageText.length > 180 ? `${pageText.slice(0, 177)}...` : pageText\n  }\n\n  /**\n   * A string that uniquely identifies feed item.\n   */\n  public get guid(): string {\n    return this.pageOptions.guid || this.link\n  }\n\n  /**\n   * Authors of feed item.\n   */\n  public get author(): FeedAuthor[] {\n    if (isFunction(this.getter.author))\n      return this.getter.author(this.page, this.app)\n\n    if (isArray(this.pageOptions.author)) return this.pageOptions.author\n\n    if (isPlainObject(this.pageOptions.author)) return [this.pageOptions.author]\n\n    return this.frontmatter.author\n      ? getFeedAuthor(this.frontmatter.author)\n      : this.options.channel?.author\n        ? getFeedAuthor(this.options.channel.author as AuthorInfo)\n        : []\n  }\n\n  /**\n   * Categories of feed item.\n   */\n  public get category(): FeedCategory[] | null {\n    if (isFunction(this.getter.category))\n      return this.getter.category(this.page, this.app)\n\n    if (isArray(this.pageOptions.category)) return this.pageOptions.category\n\n    if (isPlainObject(this.pageOptions.category))\n      return [this.pageOptions.category]\n\n    const { categories, category = categories } = this.frontmatter\n\n    return getFeedCategory(category).map((item) => ({ name: item }))\n  }\n\n  /**\n   * Describes a media object that is attached to feed item.\n   *\n   * @description rss format only\n   */\n  public get enclosure(): FeedEnclosure | null {\n    if (isFunction(this.getter.enclosure))\n      return this.getter.enclosure(this.page, this.app)\n\n    if (this.image)\n      return {\n        url: this.image,\n        type: getImageMineType(this.image.split('.').pop()),\n      }\n\n    return null\n  }\n\n  /**\n   * Indicates when feed item was published.\n   */\n  public get pubDate(): Date | null {\n    if (isFunction(this.getter.publishDate))\n      return this.getter.publishDate(this.page, this.app)\n\n    const { time, date = time } = this.page.frontmatter\n\n    const { createdTime } = this.page.data.git ?? {}\n\n    return date && date instanceof Date\n      ? date\n      : createdTime\n        ? new Date(createdTime)\n        : null\n  }\n\n  /**\n   * Indicates when feed item was updated.\n   */\n  public get lastUpdated(): Date | null {\n    if (isFunction(this.getter.lastUpdateDate))\n      return this.getter.lastUpdateDate(this.page, this.app)\n\n    const { updatedTime } = this.page.data.git ?? {}\n\n    return updatedTime ? new Date(updatedTime) : null\n  }\n\n  /**\n   * Feed item summary\n   */\n  public get summary(): string | null {\n    if (isFunction(this.getter.excerpt))\n      return this.getter.excerpt(this.page, this.app)\n\n    if (this.pageOptions.summary) return this.pageOptions.summary\n\n    return getPageExcerpt(this.app, this.page, {\n      isCustomElement: this.options.isPreservedElement,\n    })\n  }\n\n  /**\n   * Feed Item content\n   */\n\n  public get content(): string {\n    if (isFunction(this.getter.content))\n      return this.getter.content(this.page, this.app)\n\n    if (this.pageOptions.content) return this.pageOptions.content\n\n    return getPageExcerpt(this.app, this.page, {\n      isCustomElement: this.options.isPreservedElement,\n      separator: '',\n      length: Infinity,\n    })\n  }\n\n  /**\n   * Image of feed item\n   *\n   * @description json format only\n   */\n  public get image(): string | null {\n    if (isFunction(this.getter.image))\n      return this.getter.image(this.page, this.app)\n\n    const { hostname, base } = this\n    const { banner, cover } = this.frontmatter\n\n    if (banner) {\n      if (isLinkAbsolute(banner)) return getUrl(hostname, base, banner)\n\n      if (isLinkWithProtocol(banner)) return banner\n    }\n\n    if (cover) {\n      if (isLinkAbsolute(cover)) return getUrl(hostname, base, cover)\n\n      if (isLinkWithProtocol(cover)) return cover\n    }\n\n    const result = /!\\[.*?\\]\\((.*?)\\)/iu.exec(this.page.content)\n\n    if (result) {\n      if (isLinkAbsolute(result[1])) return getUrl(hostname, base, result[1])\n\n      if (isLinkWithProtocol(result[1])) return result[1]\n    }\n\n    return null\n  }\n\n  /**\n   * Contributors of feed item.\n   *\n   * @description atom format only\n   */\n  public get contributor(): FeedContributor[] {\n    if (isFunction(this.getter.contributor))\n      return this.getter.contributor(this.page, this.app)\n\n    if (isArray(this.pageOptions.contributor))\n      return this.pageOptions.contributor\n\n    if (isPlainObject(this.pageOptions.contributor))\n      return [this.pageOptions.contributor]\n\n    return this.author\n  }\n\n  /**\n   * Copyright text of feed item.\n   *\n   * @description atom format only\n   */\n  public get copyright(): string | null {\n    if (isFunction(this.getter.copyright))\n      return this.getter.copyright(this.page, this.app)\n\n    if (isString(this.frontmatter.copyright)) return this.frontmatter.copyright\n    const firstAuthor = this.author[0]\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (firstAuthor?.name) return `Copyright by ${firstAuthor.name}`\n\n    return null\n  }\n\n  public get isValid(): boolean {\n    return Boolean(this.title || this.description)\n  }\n}\n","import { isArray } from '@vuepress/helper'\nimport type { App } from 'vuepress/core'\nimport { isLinkHttp } from 'vuepress/shared'\nimport type { FeedChannelOptions, FeedPluginOptions } from '../typings/index.js'\nimport { getUrl } from './utils/index.js'\n\nexport const getFeedChannelOptions = (\n  app: App,\n  options: FeedPluginOptions,\n  localePath = '',\n): FeedChannelOptions => {\n  const { base, title, description, lang, locales } = app.siteData\n  const {\n    channel: { icon: channelIcon, image: channelImage, ...channel } = {},\n    hostname,\n    icon,\n    image,\n  } = options\n  const authorName = isArray(options.channel?.author)\n    ? options.channel.author[0]?.name\n    : options.channel?.author?.name\n\n  const defaultChannelOption: FeedChannelOptions = {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    title: locales[localePath]?.title || title || locales['/']?.title || '',\n    link: getUrl(hostname, base, localePath),\n    description:\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      locales[localePath]?.description ||\n      description ||\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      locales['/']?.description ||\n      '',\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    language: locales[localePath]?.lang || lang,\n    copyright: authorName ? `Copyright by ${authorName}` : '',\n    pubDate: new Date(),\n    lastUpdated: new Date(),\n    ...(icon\n      ? { icon: isLinkHttp(icon) ? icon : getUrl(hostname, base, icon) }\n      : {}),\n    ...(image\n      ? { image: isLinkHttp(image) ? image : getUrl(hostname, base, image) }\n      : {}),\n  }\n\n  return {\n    ...defaultChannelOption,\n    ...channel,\n    ...(channelIcon\n      ? {\n          icon: isLinkHttp(channelIcon)\n            ? channelIcon\n            : getUrl(hostname, base, channelIcon),\n        }\n      : {}),\n    ...(channelImage\n      ? {\n          image: isLinkHttp(channelImage)\n            ? channelImage\n            : getUrl(hostname, base, channelImage),\n        }\n      : {}),\n  }\n}\n","import type { App } from 'vuepress/core'\nimport { getFeedFilenames } from './getFeedFilenames.js'\nimport type { ResolvedFeedOptions } from './getFeedOptions.js'\nimport { getUrl } from './utils/index.js'\n\nexport interface FeedLinks {\n  localePath: string\n  atom: string\n  atomXsl: string\n  json: string\n  rss: string\n  rssXsl: string\n}\n\nexport const getFeedLinks = (\n  app: App,\n  options: ResolvedFeedOptions,\n  localePath: string,\n): FeedLinks => {\n  const { base } = app.siteData\n  const { hostname } = options\n  const {\n    atomOutputFilename,\n    atomXslFilename,\n    jsonOutputFilename,\n    rssOutputFilename,\n    rssXslFilename,\n  } = getFeedFilenames(options, localePath)\n\n  return {\n    localePath,\n    atom: getUrl(hostname, base, atomOutputFilename),\n    atomXsl: getUrl(hostname, base, atomXslFilename),\n    json: getUrl(hostname, base, jsonOutputFilename),\n    rss: getUrl(hostname, base, rssOutputFilename),\n    rssXsl: getUrl(hostname, base, rssXslFilename),\n  }\n}\n","import type { App } from 'vuepress/core'\nimport type {\n  FeedCategory,\n  FeedChannelOptions,\n  FeedContributor,\n} from '../../typings/index.js'\nimport { getFeedChannelOptions } from '../getFeedChannelOptions.js'\nimport type { FeedLinks } from '../getFeedLinks.js'\nimport { getFeedLinks } from '../getFeedLinks.js'\nimport type { ResolvedFeedOptions } from '../getFeedOptions.js'\nimport type { FeedItem } from './item.js'\n\nexport class FeedStore {\n  public categories = new Set<string>()\n  public contributors: FeedContributor[] = []\n  public items: FeedItem[] = []\n\n  private readonly contributorKeys = new Set<string>()\n  public channel: FeedChannelOptions\n  public links: FeedLinks\n\n  public constructor(\n    app: App,\n    localeOptions: ResolvedFeedOptions,\n    localePath: string,\n  ) {\n    this.channel = getFeedChannelOptions(app, localeOptions, localePath)\n    this.links = getFeedLinks(app, localeOptions, localePath)\n  }\n\n  /**\n   * Add category to store\n   */\n  private readonly addCategory = (category: FeedCategory): void => {\n    this.categories.add(category.name)\n  }\n\n  /**\n   * Add contributor to store\n   */\n  private readonly addContributor = (contributor: FeedContributor): void => {\n    // use keys to avoid adding same contributor\n    const key = contributor.email || contributor.name\n\n    if (key && !this.contributorKeys.has(key)) {\n      this.contributorKeys.add(key)\n      this.contributors.push(contributor)\n    }\n  }\n\n  /**\n   * Add a feed item\n   */\n  public add = (item: FeedItem): void => {\n    if (item.isValid) {\n      const { category, contributor } = item\n\n      this.items.push(item)\n      category?.forEach(this.addCategory)\n      contributor.forEach(this.addContributor)\n    }\n  }\n}\n","import { isArray } from '@vuepress/helper'\nimport { js2xml } from 'xml-js'\nimport type { FeedAuthor, FeedCategory } from '../../../typings/index.js'\nimport type { FeedStore } from '../../feed/store.js'\nimport { FEED_GENERATOR, encodeXML } from '../../utils/index.js'\nimport type {\n  AtomAuthor,\n  AtomCategory,\n  AtomContent,\n  AtomEntry,\n} from './typings.js'\n\nconst getAtomAuthor = (author: FeedAuthor): AtomAuthor => {\n  const { name = 'Unknown', email, url } = author\n\n  return {\n    name,\n    ...(email ? { email } : {}),\n    ...(url ? { uri: url } : {}),\n  }\n}\n\nconst getAtomCategory = (category: FeedCategory): AtomCategory => {\n  const { name, scheme = '' } = category\n\n  return {\n    _attributes: {\n      term: name,\n      scheme,\n    },\n  }\n}\n\n/**\n * Returns an Atom 1.0 feed\n *\n * @see http://www.atomenabled.org/developers/syndication/\n */\nexport const getAtomFeed = (feedStore: FeedStore): string => {\n  const { channel, links } = feedStore\n\n  const content: AtomContent = {\n    _declaration: {\n      _attributes: {\n        version: '1.0',\n        encoding: 'utf-8',\n      },\n    },\n    _instruction: {\n      'xml-stylesheet': `type=\"text/xsl\" href=\"${links.atomXsl}\"`,\n    },\n    feed: {\n      _attributes: {\n        xmlns: 'http://www.w3.org/2005/Atom',\n        ...(channel.language ? { 'xml:lang': channel.language } : {}),\n      },\n      id: channel.link,\n      title: channel.title,\n\n      ...(channel.description ? { subtitle: channel.description } : {}),\n      ...(channel.author\n        ? {\n            author: isArray(channel.author)\n              ? channel.author.map((author) => getAtomAuthor(author))\n              : [getAtomAuthor(channel.author)],\n          }\n        : {}),\n      ...(channel.icon ? { icon: channel.icon } : {}),\n      ...(channel.image ? { logo: channel.image } : {}),\n      ...(channel.copyright ? { rights: channel.copyright } : {}),\n\n      updated: channel.lastUpdated\n        ? channel.lastUpdated.toISOString()\n        : new Date().toISOString(),\n      generator: FEED_GENERATOR,\n      link: [{ _attributes: { rel: 'self', href: links.atom } }],\n    },\n  }\n\n  if (channel.link)\n    content.feed.link.push({\n      _attributes: { rel: 'alternate', href: channel.link },\n    })\n\n  if (channel.hub)\n    content.feed.link.push({\n      _attributes: { rel: 'hub', href: channel.hub },\n    })\n\n  if (channel.image) content.feed.logo = channel.image\n\n  if (channel.icon) content.feed.icon = channel.icon\n\n  if (channel.copyright) content.feed.rights = channel.copyright\n\n  content.feed.category = Array.from(feedStore.categories).map((category) => ({\n    _attributes: { term: category },\n  }))\n\n  content.feed.contributor = Array.from(feedStore.contributors)\n    .filter((contributor) => contributor.name)\n    .map((contributor) => getAtomAuthor(contributor))\n\n  /**\n   * \"entry\" nodes\n   */\n  content.feed.entry = feedStore.items.map((item) => {\n    // entry: required elements\n    const entry: AtomEntry = {\n      title: { _attributes: { type: 'text' }, _text: item.title },\n      id: item.guid || item.link,\n      link: { _attributes: { href: item.link } },\n      updated: (item.lastUpdated ?? new Date()).toISOString(),\n    }\n\n    // entry: recommended elements\n    if (item.summary)\n      entry.summary = {\n        _attributes: { type: 'html' },\n        _cdata: item.summary,\n      }\n    else if (item.description)\n      entry.summary = {\n        _attributes: { type: 'text' },\n        _text: item.description,\n      }\n\n    if (item.content)\n      entry.content = {\n        _attributes: { type: 'html' },\n        _cdata: item.content,\n      }\n\n    // author(s)\n    entry.author = item.author\n      .filter((author) => author.name)\n      .map((author) => getAtomAuthor(author))\n\n    if (item.category)\n      // category\n      entry.category = item.category.map((category) =>\n        getAtomCategory(category),\n      )\n\n    // contributor\n    if (item.contributor.length)\n      entry.contributor = item.contributor.map((contributor) =>\n        getAtomAuthor(contributor),\n      )\n\n    // published\n    if (item.pubDate) entry.published = item.pubDate.toISOString()\n\n    // rights\n    if (item.copyright) entry.rights = item.copyright\n\n    return entry\n  })\n\n  return js2xml(encodeXML(content), {\n    compact: true,\n    ignoreComment: true,\n    spaces: 2,\n  })\n}\n","import { isArray } from '@vuepress/helper'\nimport type { FeedAuthor } from '../../../typings/index.js'\nimport type { FeedStore } from '../../feed/store.js'\nimport type { JSONAuthor, JSONContent, JSONItem } from './typings.js'\n\nconst getJSONAuthor = (author: FeedAuthor): JSONAuthor => ({\n  name: author.name!,\n  ...(author.url ? { url: author.url } : {}),\n  ...(author.avatar ? { avatar: author.avatar } : {}),\n})\n\n/**\n * JSON 1.1 feed\n *\n * @see https://jsonfeed.org/version/1.1\n */\nexport const getJSONFeed = (feedStore: FeedStore): string => {\n  const { channel, links } = feedStore\n\n  const content: JSONContent = {\n    version: 'https://jsonfeed.org/version/1.1',\n    title: channel.title,\n    home_page_url: channel.link,\n    feed_url: links.json,\n  }\n\n  if (channel.description) content.description = channel.description\n\n  if (channel.image) content.icon = channel.image\n  if (channel.icon) content.favicon = channel.icon\n\n  const channelAuthors = (\n    isArray(channel.author)\n      ? channel.author\n      : channel.author\n        ? [channel.author]\n        : []\n  )\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    .filter((author) => author?.name)\n\n  if (channelAuthors.length)\n    content.authors = channelAuthors.map((author) => getJSONAuthor(author))\n\n  content.items = feedStore.items.map((item) => {\n    const feedItem: JSONItem = {\n      title: item.title,\n      url: item.link,\n      id: item.guid || item.link,\n      ...(item.description ? { summary: item.description } : {}),\n\n      // json_feed distinguishes between html and text content\n      // but since we only take a single type, we'll assume HTML\n      content_html: item.content,\n    }\n\n    if (item.image) feedItem.image = item.image\n\n    if (item.pubDate) feedItem.date_published = item.pubDate.toISOString()\n\n    if (item.lastUpdated)\n      feedItem.date_modified = item.lastUpdated.toISOString()\n\n    // author\n    if (isArray(item.author))\n      feedItem.authors = item.author\n        .filter((author) => author.name)\n        .map((author) => getJSONAuthor(author))\n\n    // tags\n    if (item.category)\n      feedItem.tags = item.category\n        .filter((category) => category.name)\n        .map((category) => category.name)\n\n    return feedItem\n  })\n\n  return JSON.stringify(content, null, 2)\n}\n","import { isLinkWithProtocol } from '@vuepress/helper'\nimport { js2xml } from 'xml-js'\nimport type { FeedCategory, FeedEnclosure } from '../../../typings/index.js'\nimport type { FeedItem } from '../../feed/item.js'\nimport type { FeedStore } from '../../feed/store.js'\nimport { FEED_GENERATOR, encodeXML } from '../../utils/index.js'\nimport type {\n  RSSCategory,\n  RSSContent,\n  RSSEnclosure,\n  RSSGuid,\n  RSSItem,\n} from './typings.js'\n\nconst getRSSCategory = (category: FeedCategory): RSSCategory => {\n  const { name, domain } = category\n\n  return {\n    _text: name,\n    ...(domain ? { _attributes: { domain } } : {}),\n  }\n}\n\nconst getRSSGuid = (item: FeedItem): RSSGuid => {\n  const guid = item.guid || item.link\n\n  return {\n    ...(isLinkWithProtocol(guid)\n      ? {}\n      : {\n          _attributes: {\n            isPermaLink: 'false',\n          },\n        }),\n    _text: guid,\n  }\n}\n\nconst getRSSEnclosure = (enclosure: FeedEnclosure): RSSEnclosure => ({\n  _attributes: {\n    url: enclosure.url,\n    ...(enclosure.length ? { length: enclosure.length } : {}),\n    ...(enclosure.type ? { type: enclosure.type } : {}),\n  },\n})\n\n/**\n * Returns a RSS 2.0 feed\n *\n * @see https://validator.w3.org/feed/docs/rss2.html\n */\nexport const getRssFeed = (feedStore: FeedStore): string => {\n  const { channel, links } = feedStore\n  let hasContent = false as boolean\n\n  const content: RSSContent = {\n    _declaration: { _attributes: { version: '1.0', encoding: 'utf-8' } },\n    _instruction: {\n      'xml-stylesheet': `type=\"text/xsl\" href=\"${links.rssXsl}\"`,\n    },\n    rss: {\n      _attributes: {\n        'version': '2.0',\n        'xmlns:atom': 'http://www.w3.org/2005/Atom',\n      },\n      channel: {\n        /**\n         * @see http://validator.w3.org/feed/docs/warning/MissingAtomSelfLink.html\n         */\n        'atom:link': {\n          _attributes: {\n            href: links.rss,\n            rel: 'self',\n            type: 'application/rss+xml',\n          },\n        },\n        'title': { _text: channel.title },\n        'link': { _text: channel.link },\n        'description': { _text: channel.description },\n        'language': { _text: channel.language },\n        'pubDate': {\n          _text: channel.pubDate\n            ? channel.pubDate.toUTCString()\n            : new Date().toUTCString(),\n        },\n        'lastBuildDate': {\n          _text: channel.lastUpdated\n            ? channel.lastUpdated.toUTCString()\n            : new Date().toUTCString(),\n        },\n        'generator': { _text: FEED_GENERATOR },\n        'docs': {\n          _text: 'https://validator.w3.org/feed/docs/rss2.html',\n        },\n      },\n    },\n  }\n\n  if (channel.copyright)\n    content.rss.channel.copyright = { _text: channel.copyright }\n\n  if (channel.ttl) content.rss.channel.ttl = { _text: channel.ttl.toString() }\n\n  if (channel.image)\n    content.rss.channel.image = {\n      title: { _text: channel.title },\n      url: { _text: channel.image },\n      link: { _text: channel.link },\n    }\n\n  /**\n   * Channel Categories\n   *\n   * @see https://validator.w3.org/feed/docs/rss2.html#comments\n   */\n  content.rss.channel.category = Array.from(feedStore.categories).map(\n    (category) => ({ _text: category }),\n  )\n\n  /**\n   * Channel Categories\n   *\n   * @see https://validator.w3.org/feed/docs/rss2.html#hrelementsOfLtitemgt\n   */\n  content.rss.channel.item = feedStore.items.map((entry) => {\n    const item: RSSItem = {\n      title: { _text: entry.title },\n      link: { _text: entry.link },\n      guid: getRSSGuid(entry),\n      source: {\n        _attributes: { url: links.rss },\n        _text: entry.title,\n      },\n    }\n\n    if (entry.description)\n      item.description = {\n        _text: entry.description,\n      }\n\n    /**\n     * Item Author\n     */\n    const author = entry.author.find(\n      (authorItem) => authorItem.email && authorItem.name,\n    )\n\n    if (author)\n      item.author = {\n        _text: `${author.email!} (${author.name!})`,\n      }\n\n    /**\n     * Item Category\n     *\n     * @see https://validator.w3.org/feed/docs/rss2.html#ltcategorygtSubelementOfLtitemgt\n     */\n    if (entry.category)\n      item.category = entry.category\n        .filter((category) => category.name)\n        .map((category) => getRSSCategory(category))\n\n    // TODO: This is currently not supported\n    // if (entry.comments) item.comments = { _text: entry.link };\n\n    if (entry.pubDate) item.pubDate = { _text: entry.pubDate.toUTCString() }\n\n    if (entry.content) {\n      hasContent = true\n      item['content:encoded'] = { _cdata: entry.content }\n    }\n\n    /**\n     * Item Enclosure\n     *\n     * @see https://validator.w3.org/feed/docs/rss2.html#ltenclosuregtSubelementOfLtitemgt\n     */\n    if (entry.enclosure) item.enclosure = getRSSEnclosure(entry.enclosure)\n\n    return item\n  })\n\n  if (hasContent) {\n    content.rss._attributes['xmlns:content'] =\n      'http://purl.org/rss/1.0/modules/content/'\n    content.rss._attributes['xmlns:dc'] = 'http://purl.org/dc/elements/1.1/'\n  }\n\n  return js2xml(encodeXML(content), {\n    compact: true,\n    ignoreComment: true,\n    spaces: 2,\n  })\n}\n","import { entries, fromEntries } from '@vuepress/helper'\nimport type { App } from 'vuepress/core'\nimport { colors } from 'vuepress/utils'\nimport type { FeedConfig, FeedPage } from '../typings/index.js'\nimport { FeedItem, FeedStore } from './feed/index.js'\nimport { getAtomFeed } from './generator/atom/index.js'\nimport { getJSONFeed } from './generator/json/index.js'\nimport { getRssFeed } from './generator/rss/index.js'\nimport { getFeedFilenames } from './getFeedFilenames.js'\nimport type { ResolvedFeedOptionsMap } from './getFeedOptions.js'\nimport { logger } from './utils/index.js'\n\nexport const getFeedFiles = (\n  app: App,\n  options: ResolvedFeedOptionsMap,\n  hostname: string,\n): FeedConfig[] => {\n  const localMap: Record<string, FeedStore> = fromEntries(\n    entries(options).map(([localePath, localeOptions]) => [\n      localePath,\n      new FeedStore(app, localeOptions, localePath),\n    ]),\n  )\n\n  return (\n    entries(options)\n      // filter enabled locales\n      // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n      .filter(([, { atom, json, rss }]) => atom || json || rss)\n      .map(([localePath, localeOptions]) => {\n        const {\n          atom,\n          json,\n          rss,\n          count: feedCount = 100,\n          filter,\n          sorter,\n        } = localeOptions\n\n        const feedStore = localMap[localePath]\n        const pages = app.pages\n          .filter((page) => page.pathLocale === localePath)\n          .filter(filter)\n          .sort(sorter)\n\n        // add feed items\n        for (const page of pages) {\n          const feedItem = new FeedItem(\n            app,\n            localeOptions,\n            page as FeedPage,\n            hostname,\n          )\n\n          feedStore.add(feedItem)\n          if (feedStore.items.length === feedCount) break\n        }\n\n        const count = feedStore.items.length\n\n        logger.succeed(\n          `added ${colors.cyan(\n            `${count} page${count > 1 ? 's' : ''}`,\n          )} as feed item${count > 1 ? 's' : ''} in locale ${colors.cyan(\n            localePath,\n          )}`,\n        )\n\n        const { atomOutputFilename, jsonOutputFilename, rssOutputFilename } =\n          getFeedFilenames(localeOptions, localePath)\n        const results: FeedConfig[] = []\n\n        // generate feed\n        if (atom)\n          results.push([\n            atomOutputFilename,\n            getAtomFeed(feedStore),\n            'application/atom+xml',\n          ])\n        if (json)\n          results.push([\n            jsonOutputFilename,\n            getJSONFeed(feedStore),\n            'application/json',\n          ])\n        if (rss)\n          results.push([\n            rssOutputFilename,\n            getRssFeed(feedStore),\n            'application/xml',\n          ])\n\n        return results\n      })\n      .flat()\n  )\n}\n","import {\n  dateSorter,\n  fromEntries,\n  isArray,\n  isFunction,\n  keys,\n} from '@vuepress/helper'\nimport type { GitData } from '@vuepress/plugin-git'\nimport type { App, Page } from 'vuepress/core'\nimport type {\n  BaseFeedPluginOptions,\n  FeedPluginFrontmatter,\n  FeedPluginOptions,\n} from '../typings/index.js'\n\nexport interface ResolvedFeedOptions\n  extends Omit<\n      BaseFeedPluginOptions,\n      'filter' | 'preservedElements' | 'sorter'\n    >,\n    Required<Pick<BaseFeedPluginOptions, 'filter' | 'sorter'>> {\n  hostname: string\n  isPreservedElement: (tagName: string) => boolean\n}\n\nexport type ResolvedFeedOptionsMap = Record<string, ResolvedFeedOptions>\n\nexport const getFeedOptions = (\n  { siteData }: App,\n  options: FeedPluginOptions,\n): ResolvedFeedOptionsMap =>\n  fromEntries(\n    keys({\n      // root locale must exists\n      '/': {},\n      ...siteData.locales,\n    }).map((localePath) => {\n      const preservedElements =\n        options.locales?.[localePath]?.preservedElements ??\n        options.preservedElements\n      const { hostname, devServer, locales, ...rest } = options\n\n      return [\n        localePath,\n        {\n          // default values\n          filter: ({\n            frontmatter,\n            filePathRelative,\n          }: Page<Record<string, never>, FeedPluginFrontmatter>): boolean =>\n            Boolean(\n              frontmatter.feed ?? (filePathRelative && !frontmatter.home),\n            ),\n          sorter: (\n            pageA: Page<{ git?: GitData }, Record<string, never>>,\n            pageB: Page<{ git?: GitData }, Record<string, never>>,\n          ): number =>\n            dateSorter(\n              pageA.data.git?.createdTime\n                ? new Date(pageA.data.git.createdTime)\n                : pageA.frontmatter.date,\n              pageB.data.git?.createdTime\n                ? new Date(pageB.data.git.createdTime)\n                : pageB.frontmatter.date,\n            ),\n\n          ...rest,\n          ...options.locales?.[localePath],\n\n          // make sure these are not overrode\n          hostname,\n          isPreservedElement: isArray(preservedElements)\n            ? (tagName: string): boolean =>\n                preservedElements.some((item) =>\n                  item instanceof RegExp\n                    ? item.test(tagName)\n                    : item === tagName,\n                )\n            : isFunction(preservedElements)\n              ? preservedElements\n              : (): boolean => false,\n        } as ResolvedFeedOptions,\n      ]\n    }),\n  )\n","import { entries } from '@vuepress/helper'\nimport { ensureEndingSlash } from 'vuepress/shared'\nimport { fs, getDirname, path } from 'vuepress/utils'\nimport type { FeedConfig } from '../typings/index.js'\nimport { getFeedFilenames } from './getFeedFilenames.js'\nimport type { ResolvedFeedOptionsMap } from './getFeedOptions.js'\n\nconst __dirname = import.meta.dirname || getDirname(import.meta.url)\n\nconst TEMPLATE_FOLDER = ensureEndingSlash(\n  path.resolve(__dirname, '../../templates'),\n)\n\nconst DEFAULT_ATOM_XML_TEMPLATE = fs.readFileSync(\n  `${TEMPLATE_FOLDER}atom.xsl`,\n  'utf-8',\n)\n\nconst DEFAULT_RSS_XML_TEMPLATE = fs.readFileSync(\n  `${TEMPLATE_FOLDER}rss.xsl`,\n  'utf-8',\n)\n\nexport const getAtomTemplates = (\n  options: ResolvedFeedOptionsMap,\n): FeedConfig[] =>\n  entries(options)\n    // filter enabled locales\n    .filter(([, { atom }]) => atom)\n    // write template\n    .map(([localePath, localeOptions]) => {\n      const { atomXslTemplate = DEFAULT_ATOM_XML_TEMPLATE } = localeOptions\n      const { atomXslFilename } = getFeedFilenames(localeOptions, localePath)\n\n      return [atomXslFilename, atomXslTemplate]\n    })\n\nexport const getRSSTemplates = (\n  options: ResolvedFeedOptionsMap,\n): FeedConfig[] =>\n  entries(options)\n    // filter enabled locales\n    .filter(([, { rss }]) => rss)\n    // write template\n    .map(([localePath, localeOptions]) => {\n      const { rssXslTemplate = DEFAULT_RSS_XML_TEMPLATE } = localeOptions\n\n      const { rssXslFilename } = getFeedFilenames(localeOptions, localePath)\n\n      return [rssXslFilename, rssXslTemplate]\n    })\n","import type { App } from 'vuepress/core'\nimport { fs, path } from 'vuepress/utils'\nimport type { FeedConfig } from '../typings/index.js'\n\nexport const writeFiles = (app: App, files: FeedConfig[]): Promise<void>[] =>\n  files.map(async ([filename, content]) => {\n    const location = app.dir.dest(filename)\n\n    await fs.ensureDir(path.dirname(location))\n    await fs.writeFile(location, content, 'utf-8')\n  })\n","import { customizeDevServer, values } from '@vuepress/helper'\nimport type { PluginFunction, PluginObject } from 'vuepress/core'\nimport { isLinkHttp, removeEndingSlash } from 'vuepress/shared'\nimport { colors } from 'vuepress/utils'\nimport type { FeedPluginOptions } from '../typings/index.js'\nimport { addFeedLinks } from './addFeedLinks.js'\nimport { getFeedFiles } from './getFeedFiles.js'\nimport { getFeedOptions } from './getFeedOptions.js'\nimport { getAtomTemplates, getRSSTemplates } from './getTemplates.js'\nimport { writeFiles } from './output.js'\nimport { FEED_GENERATOR, logger } from './utils/index.js'\n\nexport const feedPlugin =\n  (options: FeedPluginOptions): PluginFunction =>\n  (app) => {\n    if (app.env.isDebug) logger.info('Options:', options)\n\n    const plugin: PluginObject = {\n      name: FEED_GENERATOR,\n    }\n\n    let hostname = app.env.isDev\n      ? options.devHostname || `http://localhost:${app.options.port}`\n      : options.hostname\n\n    if (!hostname) {\n      logger.error(`Option ${colors.magenta('hostname')} is required!`)\n\n      return plugin\n    }\n\n    // make sure hostname do not end with `/`\n    hostname = removeEndingSlash(\n      isLinkHttp(hostname) ? hostname : `https://${hostname}`,\n    )\n\n    if (\n      //  no output in root\n      !options.atom &&\n      !options.json &&\n      !options.rss &&\n      // no output in every locales\n      options.locales &&\n      values(options.locales).every(\n        ({ atom, json, rss }) => !atom && !json && !rss,\n      )\n    ) {\n      logger.info('No feed output requested, the plugin won’t start!')\n\n      return plugin\n    }\n\n    const feedOptions = getFeedOptions(app, options)\n\n    return {\n      ...plugin,\n\n      onInitialized: (): void => {\n        if (app.env.isBuild || options.devServer) addFeedLinks(app, feedOptions)\n      },\n\n      extendsBundlerOptions: (config): void => {\n        if (options.devServer)\n          [\n            ...getFeedFiles(app, feedOptions, hostname),\n            ...getAtomTemplates(feedOptions),\n            ...getRSSTemplates(feedOptions),\n          ].forEach(([path, content, contentType]) => {\n            customizeDevServer(config, app, {\n              path,\n              response: (_res, req) => {\n                if (contentType) req.setHeader('Content-Type', contentType)\n\n                return Promise.resolve(content)\n              },\n              errMsg: 'Unexpected feed generation error',\n            })\n          })\n      },\n\n      onGenerated: async (): Promise<void> => {\n        await Promise.all([\n          ...writeFiles(app, getFeedFiles(app, feedOptions, hostname)),\n          ...writeFiles(app, getAtomTemplates(feedOptions)),\n          ...writeFiles(app, getRSSTemplates(feedOptions)),\n        ])\n      },\n    }\n  }\n"],"names":["encodeCDATA","content","encodeXMLContent","encodeXML","fromEntries","entries","key","value","attr","attrValue","isArray","item","isPlainObject","isFeedAuthor","author","isString","getFeedAuthor","getFeedCategory","category","getImageMineType","ext","getUrl","hostname","base","path","isLinkHttp","removeEndingSlash","removeLeadingSlash","FEED_GENERATOR","logger","Logger","getFeedFilenames","options","prefix","addFeedLinks","app","title","locales","head","localePaths","keys","atomOutputFilename","jsonOutputFilename","rssOutputFilename","atom","json","rss","getHeadItem","name","fileName","type","page","pathLocale","localeOptions","FeedItem","isFunction","pageText","getPageText","categories","time","date","createdTime","updatedTime","getPageExcerpt","banner","cover","isLinkAbsolute","isLinkWithProtocol","result","firstAuthor","getFeedChannelOptions","localePath","description","lang","channelIcon","channelImage","channel","icon","image","authorName","getFeedLinks","atomXslFilename","rssXslFilename","FeedStore","contributor","getAtomAuthor","email","url","getAtomCategory","scheme","getAtomFeed","feedStore","links","entry","js2xml","getJSONAuthor","getJSONFeed","channelAuthors","feedItem","getRSSCategory","domain","getRSSGuid","guid","getRSSEnclosure","enclosure","getRssFeed","hasContent","authorItem","getFeedFiles","localMap","feedCount","filter","sorter","pages","count","colors","results","getFeedOptions","siteData","preservedElements","devServer","rest","frontmatter","filePathRelative","pageA","pageB","dateSorter","tagName","__dirname","getDirname","TEMPLATE_FOLDER","ensureEndingSlash","DEFAULT_ATOM_XML_TEMPLATE","fs","DEFAULT_RSS_XML_TEMPLATE","getAtomTemplates","atomXslTemplate","getRSSTemplates","rssXslTemplate","writeFiles","files","filename","location","feedPlugin","plugin","values","feedOptions","config","contentType","customizeDevServer","_res","req"],"mappings":"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"}