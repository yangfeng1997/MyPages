import type { Node } from '../../parser/parse.js';
import type { Visitor } from '../../traverser/traverse.js';
/**
Extract nodes at the start of every alternative into a prefix.
Ex: `^aa|^abb|^ac` -> `^a(?:a|bb|c)`.
Also works within groups.
*/
declare const extractPrefix: Visitor;
declare function isAllowedSimpleType(type: Node['type']): type is "Assertion" | "Character" | "CharacterSet";
declare function isNodeEqual(a: Node, b: Node): boolean;
export { extractPrefix, isAllowedSimpleType, isNodeEqual, };
//# sourceMappingURL=extract-prefix.d.ts.map