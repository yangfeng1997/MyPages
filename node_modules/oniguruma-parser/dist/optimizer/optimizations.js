"use strict";import{alternationToClass as e}from"./transforms/alternation-to-class.js";import{exposeAnchors as s}from"./transforms/expose-anchors.js";import{extractPrefix as r}from"./transforms/extract-prefix.js";import{extractPrefix2 as o}from"./transforms/extract-prefix-2.js";import{extractSuffix as t}from"./transforms/extract-suffix.js";import{mergeRanges as a}from"./transforms/merge-ranges.js";import{preventReDoS as i}from"./transforms/prevent-redos.js";import{removeEmptyGroups as p}from"./transforms/remove-empty-groups.js";import{removeUselessFlags as m}from"./transforms/remove-useless-flags.js";import{simplifyCallouts as n}from"./transforms/simplify-callouts.js";import{unnestUselessClasses as l}from"./transforms/unnest-useless-classes.js";import{unwrapNegationWrappers as f}from"./transforms/unwrap-negation-wrappers.js";import{unwrapUselessClasses as u}from"./transforms/unwrap-useless-classes.js";import{unwrapUselessGroups as x}from"./transforms/unwrap-useless-groups.js";import{useShorthands as c}from"./transforms/use-shorthands.js";import{useUnicodeAliases as U}from"./transforms/use-unicode-aliases.js";import{useUnicodeProps as g}from"./transforms/use-unicode-props.js";const C=new Map([["alternationToClass",e],["exposeAnchors",s],["extractPrefix",r],["extractPrefix2",o],["extractSuffix",t],["preventReDoS",i],["removeEmptyGroups",p],["removeUselessFlags",m],["simplifyCallouts",n],["unnestUselessClasses",l],["unwrapNegationWrappers",f],["unwrapUselessClasses",u],["unwrapUselessGroups",x],["useShorthands",c],["useUnicodeAliases",U],["useUnicodeProps",g],["mergeRanges",a]]);export{C as optimizations};
//# sourceMappingURL=optimizations.js.map
