const g=(e,t,l)=>{let n;const a=t,r={ok:!1,pos:t,value:""};for(n=e.charAt(t);t<l&&/\d/.test(n)||n==="%";)n=e.charAt(++t);return r.ok=!0,r.pos=t,r.value=e.slice(a,t),r},k=(e,t,l)=>{const n={ok:!1,pos:0,width:"",height:""};if(t>=l||e.charAt(t)!=="=")return n;t++;const a=e.charAt(t);if(a!=="x"&&!/\d/.test(a))return n;const r=g(e,t,l);if(t=r.pos,e.charAt(t)!=="x")return n;t++;const i=g(e,t,l);return t=i.pos,n.width=r.value,n.height=i.value,n.pos=t,n.ok=!0,n},x=(e,t)=>{const l=e.env,n=e.pos,a=e.posMax;if(e.src.charAt(e.pos)!=="!"||e.src.charAt(e.pos+1)!=="[")return!1;const r=e.pos+2,i=e.md.helpers.parseLinkLabel(e,e.pos+1,!1);if(i<0)return!1;let s=i+1,o,p="",h="",m="",d="";if(s<a&&e.src.charAt(s)==="("){for(s++;s<a&&(o=e.src.charAt(s),!(o!==" "&&o!=="	"));)s++;if(s>=a)return!1;let c;c=e.md.helpers.parseLinkDestination(e.src,s,e.posMax),c.ok&&(p=e.md.normalizeLink(c.str),e.md.validateLink(p)?s=c.pos:p="");const f=s;for(;s<a&&(o=e.src.charAt(s),!(o!==" "&&o!=="	"));s++);if(c=e.md.helpers.parseLinkTitle(e.src,s,e.posMax),s<a&&f!==s&&c.ok)for(h=c.str,s=c.pos;s<a&&(o=e.src.charAt(s),!(o!==" "&&o!=="	"));s++);else h="";if(s-1>=0&&(o=e.src.charAt(s-1),o===" "&&(c=k(e.src,s,e.posMax),c.ok)))for(m=c.width,d=c.height,s=c.pos;s<a&&(o=e.src.charAt(s),!(o!==" "&&o!==`
`));s++);if(s>=a||e.src.charAt(s)!==")")return e.pos=n,!1;s++}else{let c="";if(typeof l.references>"u")return!1;for(;s<a&&(o=e.src.charAt(s),!(o!==" "&&o!=="	"));s++);if(s<a&&e.src.charAt(s)==="["){const u=s+1;s=e.md.helpers.parseLinkLabel(e,s),s>=0?c=e.src.slice(u,s++):s=i+1}else s=i+1;c||(c=e.src.slice(r,i));const f=l.references[e.md.utils.normalizeReference(c)];if(!f)return e.pos=n,!1;p=f.href,h=f.title??""}if(!t){e.pos=r,e.posMax=i;const c=e.src.slice(r,i),f=[];e.md.inline.parse(c,e.md,e.env,f);const u=e.push("image","img",0);u.attrs=[["src",p],["alt",""]],h&&u.attrs.push(["title",h]),m&&u.attrs.push(["width",m]),d&&u.attrs.push(["height",d]),u.children=f,u.content=c}return e.pos=s,e.posMax=a,!0},L=e=>{e.inline.ruler.before("emphasis","image",x)},A=e=>{const t=e.renderer.rules.image;e.renderer.rules.image=(l,n,a,r,i)=>{const s=l[n],o=s.children?.[0]?.content;if(o){const p=/^(.*)\|(\d*)(?:x(\d*))?$/.exec(o);if(p){const[,h,m,d]=p;s.content=h,s.children[0].content=h,s.attrSet("width",m),typeof d=="string"&&s.attrSet("height",d)}}return t(l,n,a,r,i)}};export{L as imgSize,A as obsidianImageSize,A as obsidianImgSize};
//# sourceMappingURL=index.js.map
